// InfoTab.tsx - —Ç–æ—á–Ω–∞—è –∫–æ–ø–∏—è –ª–æ–≥–∏–∫–∏ –∏–∑ Python tipes.py
import React, { useState } from 'react';

interface InfoTabProps {
  darkMode: boolean;
}

const InfoTab: React.FC<InfoTabProps> = ({ darkMode }) => {
  const [searchText, setSearchText] = useState('');
  const [expandedSections, setExpandedSections] = useState<{ [key: string]: boolean }>({});

  const infoSections = [
    {
      id: 'general',
      title: '–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
      content: `–≠—Ç–æ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞–º –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–∏–ø–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–æ–≤.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ –≥–æ—Ç–æ–≤—ã–º —à–∞–±–ª–æ–Ω–∞–º
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á—ë—Ç –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–∫–∞–∑–æ–≤
‚Ä¢ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞`,
    },
    {
      id: 'templates',
      title: '–®–∞–±–ª–æ–Ω—ã –æ—Ç–≤–µ—Ç–æ–≤',
      content: `–î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:

1. –®–∞–±–ª–æ–Ω 1 (–†–í) - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∑–∞–∫–∞–∑–∞
2. –®–∞–±–ª–æ–Ω 2 (–ü–æ–¥—Ä–æ–±–Ω–æ) - –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
3. –®–∞–±–ª–æ–Ω 3 (–û—Ç–º–µ–Ω–∞ –±–∞—Ç—á–∞) - –¥–ª—è –º—É–ª—å—Ç–∏–∑–∞–∫–∞–∑–æ–≤
4. –®–∞–±–ª–æ–Ω 4 (–û–ø–ª–∞—Ç–∞ —á–∞—Å—Ç—è–º–∏) - –¥–ª—è —á–∞—Å—Ç–∏—á–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π

–ö–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.`,
    },
    {
      id: 'usage',
      title: '–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å',
      content: `1. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è:
   ‚Ä¢ –î–ª—è –æ–±—ã—á–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤: –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏ –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
   ‚Ä¢ –î–ª—è –º—É–ª—å—Ç–∏–∑–∞–∫–∞–∑–æ–≤: –¥–∞–Ω–Ω—ã–µ –æ —Ä–∞—Å—á—ë—Ç–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä—É—á–µ–Ω–∏–π
   ‚Ä¢ –î–ª—è –æ–ø–ª–∞—Ç—ã —á–∞—Å—Ç—è–º–∏: –¥–∞–Ω–Ω—ã–µ –æ –¥–≤—É—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è—Ö
3. –ù–∞–∂–º–∏—Ç–µ "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç"
4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–Ω–æ–ø–∫–æ–π "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"`,
    },
    {
      id: 'data_format',
      title: '–§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö',
      content: `–î–∞–Ω–Ω—ã–µ –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤–≤–æ–¥–∏—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

–ü–æ–¥–∞—á–∞
50 ‚ÇΩ (7.55 –∫–º)
–í—Ä–µ–º—è –≤ –ø—É—Ç–∏
271 ‚ÇΩ (–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —Å–ø—Ä–æ—Å)
–ö–∏–ª–æ–º–µ—Ç—Ä—ã –≤ –ø—É—Ç–∏
55 ‚ÇΩ (13 –º–∏–Ω 44 —Å–µ–∫)

–ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —Ü–µ–Ω–æ–π –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö (‚ÇΩ) –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Å–∫–æ–±–∫–∞—Ö.`,
    },
    {
      id: 'troubleshooting',
      title: '–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º',
      content: `–ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –∏—Ö —Ä–µ—à–µ–Ω–∏—è:

‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö - —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ü–µ–Ω—ã —É–∫–∞–∑–∞–Ω—ã —Å —Å–∏–º–≤–æ–ª–æ–º ‚ÇΩ
‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–∞—Å—á—ë—Ç –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ - —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –±—É—Ñ–µ—Ä—É –æ–±–º–µ–Ω–∞`,
    },
  ];

  const toggleSection = (sectionId: string) => {
    setExpandedSections((prev) => ({
      ...prev,
      [sectionId]: !prev[sectionId],
    }));
  };

  const filterContent = (text: string) => {
    const searchText = text.toLowerCase().trim();
    setSearchText(searchText);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
    const newExpanded: { [key: string]: boolean } = {};
    infoSections.forEach((section) => {
      const titleMatch = section.title.toLowerCase().includes(searchText);
      const contentMatch = section.content.toLowerCase().includes(searchText);
      if (titleMatch || contentMatch) {
        newExpanded[section.id] = true;
      }
    });
    setExpandedSections((prev) => ({ ...prev, ...newExpanded }));
  };

  const filteredSections = infoSections.filter((section) => {
    if (!searchText) return true;
    const titleMatch = section.title.toLowerCase().includes(searchText);
    const contentMatch = section.content.toLowerCase().includes(searchText);
    return titleMatch || contentMatch;
  });

  return (
    <div className={`info-tab ${darkMode ? 'dark' : 'light'}`}>
      <div className="info-header">
        <h2>üìö –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
        <div className="search-container">
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º..."
            value={searchText}
            onChange={(e) => filterContent(e.target.value)}
            className="search-input"
          />
        </div>
      </div>

      <div className="info-content">
        {filteredSections.map((section) => (
          <div key={section.id} className="info-section">
            <button
              className={`section-header ${expandedSections[section.id] ? 'expanded' : ''}`}
              onClick={() => toggleSection(section.id)}>
              <span className="section-title">{section.title}</span>
              <span className="section-toggle">{expandedSections[section.id] ? '‚ñº' : '‚ñ∂'}</span>
            </button>

            {expandedSections[section.id] && (
              <div className="section-content">
                <div className="section-text">
                  {section.content.split('\n').map((line, index) => (
                    <div key={index} className="content-line">
                      {line}
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  );
};

export default InfoTab;
